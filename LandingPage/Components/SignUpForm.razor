@using LandingPage.Data
@using LandingPage.Services
@using Microsoft.Extensions.Options
@using SendGrid
@inject IOptions<SendGridOptions> _options
@inject ISendGridClient _client

@if (Submitted == true)
{
    <p data-role="confirmation-message" class="form-message">Thanks for signing up!</p>
}
else
{
    <div class="sendgrid-signup-form">

        @if (ShowSpinner == true)
        {
            <div class="loader-container">
                <div class="spinner spinner-round"></div>
            </div>
        }

        <div class="form" style="background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); border-color: rgb(28, 125, 68); border-width: 0px; border-radius: 10px; padding: 20px 35px;">
            <div class="fields-wrapper">
                <section>
                    <h1>Subscribe to our newsletter</h1>
                    <p>Don’t be a stranger. Stay in touch! Sign up to get awesome updates from Nativoplus!</p>
                </section>
                <label class="input-label" for="email">Email</label>
                <div class="input-wrap @(EmailIsValid ? "" : "has-error")"><input @bind="Email" class="email-input" type="text" id="email" name="email" placeholder="Please enter your email." /></div>
                <p data-name="email" data-role="required" class="error @(EmailIsValid ? "hidden" : "")"><span>Please provide a valid email.</span></p>
                <div class="submit-container">
                    <button @onclick=@(() => Subscribe()) class="submit-button" style="background-color: rgb(28, 125, 68); color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); border-width: 0px; border-radius: 24px; padding: 12px 24px;">Subscribe</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string? Email = string.Empty;
    private bool EmailIsValid = true;
    private bool Submitted = false;
    private bool ShowSpinner = false;

    private async Task Subscribe()
    {
        ShowSpinner = true;

        if (HelperMethods.IsValidEmail(Email))
        {
            var data = @"{
                ""list_ids"": [
                    " + $@"""{_options.Value.NewsletterContactsListId}""" + @"
                ],
                ""contacts"": [
                    {
                        ""email"": " + $@"""{Email}""" + @"
                    }
                ]
            }";

            var response = await _client.RequestAsync(
                method: SendGridClient.Method.PUT,
                urlPath: "marketing/contacts",
                requestBody: data
            );

            Submitted = true;
        }
        else
        {
            EmailIsValid = false;
        }

        ShowSpinner = false;
    }
}
