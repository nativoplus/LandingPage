@implements IDisposable
@inject NavigationManager NavigationManager


@if (NavLogo)
{
    <div class="logo pull-left"><a href="/" @onclick:preventDefault @onclick=@( () => NavigateTo("/"))><img id="image-logo" class="nav-logo-image" src="/template/images/bg/NativoLogo-03_cut.webp" alt="Logo NativoPlus"/></a></div>
}
else
{
    <div class="logo foot-logo-image"><a style="color: white !important;" href="/" @onclick:preventDefault @onclick=@( () => NavigateTo("/"))><img src="/template/images/bg/NativoLogo-03_cut.webp" alt="Logo NativoPlus"/></a></div>
}
@code {
    [Parameter]
    public bool NavLogo { get; set; } = true;



    public void NavigateTo(string path)
    {
        // Forced Reload To Ensure a Fresh Instance of Javascript Files.
        NavigationManager.NavigateTo(path, forceLoad: true);
    }
    private void LocationChanged(object sender, LocationChangedEventArgs e)
    {
        string navigationMethod = e.IsNavigationIntercepted ? "HTML" : "code";
        System.Diagnostics.Debug.WriteLine($"Notified of navigation via {navigationMethod} to {e.Location}");
    }
    void IDisposable.Dispose()
    {
        // Unsubscribe from the event when our component is disposed
    }
}
