@*Imports*@
@inject IJSRuntime jsRuntime
@using LandingPage.Components
@using LandingPage.Domain.Entities
@*Page*@
@layout EmptyLayout
@page "/"

<div class="page">

    <div class="loader"><div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div></div>

    <!-- Content CLick Capture-->
    @*<div class="click-capture"></div>*@

    <!-- Sidebar Menu-->

    <Nativo_Menu @bind-ToggleState=@MenuState Position=AllEnumerations.MenuPosition.Right>
        <Nativo_Menu_Item Text="Home" Url="#page1" />
        <Nativo_Menu_Item Text="Specialization" Url="#page2" />
        <Nativo_Menu_Item Text="Projects" Url="#page3" />
        <Nativo_Menu_Item Text="Services" Url="#page4" />
        <Nativo_Menu_Item Text="Reviews" Url="#page6" />
        <Nativo_Menu_Item Text="Contact" Url="#page7" />
    </Nativo_Menu>
 

    <!-- Views -->

  <div class="pagepiling">
        <LandingView />
        <AboutView />
        <OurTeamMembersView />
        <ArticlesView ArticleList=@ArticleList />
        <ServicesView />
        <PartnersView />
        <TestimonialsView />
        <ContactUsView />
    </div>

    <!-- Modals success -->

    <div id="success" class="modal modal-message fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <span class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></span>
                    <h2 class="modal-title">Thank you</h2>
                    <p class="modal-subtitle">Your message is successfully sent...</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Modals error -->

    <div id="error" class="modal modal-message fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <span class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></span>
                    <h2 class="modal-title">Sorry</h2>
                    <p class="modal-subtitle"> Something went wrong </p>
                </div>
            </div>
        </div>
    </div>


</div>

@code {
    public List<Article> ArticleList { get; set; } = new List<Article> { };
    private bool MenuState = false;

    private void ToggleMenu()
    {
        MenuState = !MenuState;
    }

    protected override void OnInitialized()
    {
        ArticleList = new List<Article>
        {
            new Article
            {
              Title = "Improving financial company customer onboarding capabilities with low code platform:",
              Bullets = new List<string>{ "Enable Multiple Integrations", "Transform and Streamline the UX", "Descrease Onboarding by a Factor of 10", "Exponentially Increase Onboarding Capacity"},
              PhotoUrl = "template/images/assets/fintechsolutions.png"
            },
            new Article{
              Title = "Improving financial company customer onboarding capabilities with low code platform:",
              Bullets = new List<string>{ "Enable Multiple Integrations", "Transform and Streamline the UX", "Descrease Onboarding by a Factor of 10", "Exponentially Increase Onboarding Capacity"},
              PhotoUrl = "template/images/assets/fintechsolutions.png"
            }
        };

        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/jquery.min.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/owl.carousel.min.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/smoothscroll.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/jquery.validate.min.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/jquery.pagepiling.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/bootstrap.min.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/scripts.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "https://vjs.zencdn.net/7.17.0/video.min.js");
            await jsRuntime.InvokeVoidAsync("runInitScript");
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}