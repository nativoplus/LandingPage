@inject IJSRuntime jsRuntime
@using LandingPage.Domain.Entities
<div class="pagepiling">

    <AboutView />
    <OurTeamMembersView />
    <ArticlesView ArticleList=@ArticleList />

    <ServicesView />
    <PartnersView />
    <TestimonialsView />
    <ContactUsView />
</div>

    @code {
    public List<Article> ArticleList { get; set; } = new List<Article> { };

    protected override void OnInitialized()
    {
        ArticleList = new List<Article>
        {
            new Article
            {
              Title = "Improving financial company customer onboarding capabilities with low code platform:",
              Bullets = new List<string>{ "Enable Multiple Integrations", "Transform and Streamline the UX", "Descrease Onboarding by a Factor of 10", "Exponentially Increase Onboarding Capacity"},
              ImgUrl = "template/images/assets/fintechsolutions.png"
            }
        };

        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/jquery.min.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/owl.carousel.min.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/smoothscroll.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/jquery.validate.min.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/jquery.pagepiling.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/bootstrap.min.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "/template/js/scripts.js");
            await jsRuntime.InvokeAsync<IJSObjectReference>("import", "https://vjs.zencdn.net/7.17.0/video.min.js");
            await jsRuntime.InvokeVoidAsync("runInitScript");
        }
        await base.OnAfterRenderAsync(firstRender);
    }
    }